@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager
@model LaunchCodeCapstone.Models.ViewModels.ReviewDetailsViewModel
@{
    ViewData["Title"] = Model.Title;
}
<div class="container my-5">
    <div class="row justify-content-center">
        <div class=col-12 col-lg-6">
            @if (Model != null)
            {
                <h1 class="mb-3">@Model.Heading</h1>
                <div class="d-flex justify-content-between mb-3">
                    <span class="text-secondary">@Model.Author</span>
                    <span class="text-secondary">@Model.PublishedDate.ToShortDateString()</span>
                </div>

                <div class="mb-3">
                    @*                    i want this anchor tag with like icon to display only when signed in
                *@                    <a od="likebtn" style="cursor: pointer;">

                        <i class="bi bi-hand-thumbs-up"></i>

                    </a>

                    <span id="totalLikes">@Model.TotalLikes</span> Likes
                </div>

                <img src="@Model.FeaturedImageUrl" class="d-block img-fluid mb-3" />

                <div class="mb-3 review-details-content">
                    @Html.Raw(Model.Content)
                </div>

                <div class="card">
                    <div class="card-header">
                        <h5>Comments</h5>
                        @if (signInManager.IsSignedIn(User))
                        {
                            <form method="post">
                                <div class="mb-3">
                                    <label class="form-label">Comment Description</label>
                                    <input type="text" class="form-control" asp-for="CommentDescription"/>
                                </div>

                                <div class="mb-3">
                                    <button type="submit" class="btn btn-dark">Submmite</button>
                                    <input type="hidden" asp-for="Id"/>
                                    <input type="hidden" asp-for="UrlHandle"/>
                                </div>
                            </form>
                        }
                    </div>
                    <div class="card-body">
                        @if(Model.Comments != null && Model.Comments.Any())
                        {
                            foreach (var comment in Model.Comments)
                            {
                                <div class="card mb-3">
                                    <div class="card-body">
                                        <div>
                                            @comment.Description
                                        </div> 
                                        <div>
                                            <span class="text-secondary">@comment.Username</span>
                                            <span class="text-secondary">@comment.DateAdded</span>
                                        </div>
                                    </div>
                                </div>
                            }                           
                        }
                    </div>
                </div>
            }
            else
            {
                <p>Review not found!</p>
            }
        </div>
    </div>
</div>

@section Scripts{
    <script>
        const likebtnElement = document.getElementById('likebtn');
        const totalLikeElement = document.getElementById('totalLikes');

        async function getTotalLikes() {
            fetch('/api/likeReview/@Model.Id/totalLikes'), {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                }
            }).then(data => data.json())
                .then(result = totalLikeElement.innerHTML = result);
        }

        async function addLikeToReview() {
            fetch('/api/LikeReview/Add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                },
                body: JSON.stringify({
                    reviewId: '@Model.Id', userId: '@userManager.GetUserId(User)'
                })
            }).then(() => {
                likebtnElement.innterHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
                likebtnElement.removeEventListener('click', assLikeToReview);
                getTotalLikes();
            });
        }

        likebtnElement.addEventListener('click', addLikeToReview)
    </script>
}